# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: 'en'
    api.links.error_docs: ''

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    App\DataFixtures\ORM\LoadFixtures:
        arguments:
            - '%kernel.project_dir%'

    App\EventSubscriber\ApiExceptionSubscriber:
        public: false
        class: App\EventSubscriber\ApiExceptionSubscriber
        arguments: ['@App\Service\Api\Problem\ResponseFactory', '%kernel.debug%']
        tags:
            - { name: kernel.event_subscriber }

    App\Service\Api\Problem\ResponseFactory:
        public: false
        class: App\Service\Api\Problem\ResponseFactory
        arguments: ['%api.links.error_docs%']

    App\Serializer\Handler\UuidHandler:
        public: false
        class: App\Serializer\Handler\UuidHandler
        tags:
            - { name: jms_serializer.handler, type: Ramsey\Uuid\Uuid, format: json, direction: serialization, method: serializeUuidToJson }

    App\Serializer\Groups\GroupsResolver:
        public: false
        class: App\Serializer\Groups\GroupsResolver
        arguments:
            $requestStack: '@request_stack'

    App\Service\Shop\Maker\CreationStategy:
        public: false
        alias: '@App\Service\Shop\Maker\DefaultCreationStrategy'

    App\Service\Shop\Maker\DefaultCreationStrategy: ~

    JMS\Serializer\SerializerInterface: '@jms_serializer'

    app.request_matcher.requested:
        public: true
        class: App\Security\Matcher\RestrictedRequestMatcher

    gedmo.listener.timestampable:
        class: Gedmo\Timestampable\TimestampableListener
        tags:
            - { name: doctrine.event_subscriber, connection: default }
        calls:
            - [ setAnnotationReader, [ '@annotation_reader' ] ]
